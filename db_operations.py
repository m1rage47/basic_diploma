from sqlalchemy.exc import IntegrityError
from sqlalchemy.orm import sessionmaker

from model import Users, UsersHistory, engine

Session = sessionmaker(bind=engine)
session = Session()


def add_user(message):
    user_id = message.from_user.id
    username = message.from_user.username or "–≥–æ—Å—Ç—å"
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    new_record = Users(
        users_id=user_id,
        username=username,
        first_name=first_name,
        last_name=last_name,
    )

    try:
        session.add(new_record)
        session.commit()
        welcome = (
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üëã, {username}\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–∫–∏–Ω–æ–ø–æ–∏—Å–∫üé¨\n"
            f"–¢—É—Ç –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—ë–º –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–µ –±—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã üö´\n"
            f"–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å üîç"
        )
    except IntegrityError:
        session.rollback()
        welcome = f"–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å, {username}!"

    return welcome


def add_to_history(user_id, films_details):
    poster = films_details.get("poster", {}).get("url", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    title = films_details.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    year = films_details.get("year", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    rating_kp = round(films_details.get("rating", {}).get("kp", "–ù–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞"), 1)
    rating_imdb = round(films_details.get("rating", {}).get("imdb", "–ù–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞"), 1)
    description = films_details.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    genres = films_details.get("genres", [])
    genres_list = ", ".join([g["name"] for g in genres]) if genres else "‚Äî"
    age_rating = films_details.get("ageRating", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    new_record = UsersHistory(
        users_id=user_id,
        title=title,
        description=description[:1000],
        rating_kp=rating_kp,
        rating_imdb=rating_imdb,
        year=year,
        genres=genres_list,
        age_rate=age_rating,
        poster=poster,
    )

    session.add(new_record)
    session.commit()


def show_history(user_id):
    history = (
        session.query(UsersHistory)
        .filter_by(users_id=user_id)
        .order_by(UsersHistory.data.desc())
        .limit(10)
        .all()
    )
    return history
